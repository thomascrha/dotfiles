# vim: set ft=swayconfig ts=2 sw=2:
#########################################################################################
# General Settings ######################################################################
#########################################################################################
set $mod Mod4

for_window [title="^.*"] border pixel 1, title_format "<b> %class >> %title </b>"
default_border pixel 20
# client.focused #188c75 #188c75 #188c75
focus_follows_mouse no

gaps inner 10

# disable windows titlebars, while preserving border
for_window [class=".*"] border pixel 3, titlebar none

# default border pixel size
default_border pixel 3

# Activate smart borders when no gaps present
smart_borders on

bar {
    swaybar_command waybar
    position top
    hidden_state hide
    mode hide
    modifier Mod4
}
# bar {
#     swaybar_command waybar
# }
### Input configuration
input type:pointer {
  natural_scroll disabled
  scroll_factor 1.0
  left_handed disabled
}
input type:touchpad {
  pointer_accel 0.0
  natural_scroll enabled
  scroll_factor 1.0
  scroll_method two_finger
  left_handed disabled
  tap enabled
  tap_button_map lrm
  drag enabled
  drag_lock disabled
  dwt enabled
  middle_emulation enabled
}

input type:keyboard {
  xkb_layout us
  xkb_options caps:escape
}

### fonts
font pango:"RobotoMono Nerd Font" Regular 8


for_window [shell="xwayland"] title_format "[XWayland] %title"

### Clipboard =================================================================
# Wipe clipboard on start.
# exec cliphist wipe
# Listen to clipboard changes on the primary keyboard.
# exec wl-paste --watch cliphist store
exec_always ps aux | grep wl-paste | grep -v grep || wl-paste -t text --watch clipman store &> /tmp/clipman.log
bindsym $mod+c exec "clipman pick -t rofi --err-on-no-selection && wtype -M ctrl -M shift v"

#########################################################################################
# Sway execs ############################################################################
#########################################################################################
# Note the exec_always commands initially check to see if there is already an instance of the program running.
# This is to prevent multiple instances of the same program from running. i.e. check || if error then run

### Workstyle
# Adds names and icons to workspaces
# exec_always ps aux | grep workstyle | grep -v grep || workstyle &> /tmp/workstyle.log
# exec sworkstyle &> /tmp/sworkstyle.log
#
### nm-applet
# Network manager applet
# exec_always ps aux | grep nm-applet | grep -v grep || nm-applet --indicator &> /tmp/nm-applet.log
#!/bin/sh

# exec_always ps aux | grep sway-audio-idle-inhibit | grep -v grep || sway-audio-idle-inhibit &> /tmp/sway-audio-idle-inhibit.log

### blueman-applet
# exec_always ps aux | grep blueman-applet | grep -v grep || blueman-applet &> /tmp/blueman-applet.log

# Wob setup
# exec_always ps aux | grep wob | grep -v grep || rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob -vv > /tmp/wob.log

## dim screen
# exec_always ps aux | grep wlsunset | grep -v grep || wlsunset -l -33.7 -L 150.3

### autotiling
# exec_always ps aux | grep autotiling | grep -v grep || autotiling --limit 2 &> /tmp/autotiling.log

### kdeconnect-indicator
# exec_always ps aux | grep kdeconnect-indicator | grep -v grep || kdeconnect-indicator -

# exec_always ps aux | grep sov | grep -v grep | grep -v sovpipe || sh -c 'rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov -vv > /tmp/sov.log'

### wallpaper
# exec_always ps aux | grep rotate-wallpaper | grep -v grep || /home/tcrha/.config/sway/rotate-wallpaper.sh ~/Pictures/wallpapers 360

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# exec swayidle -w \
#     timeout 300 'swaylock -f -c 000000' \
#     timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#     before-sleep 'swaylock -f -c 000000'

# lock screen before suspend. Use loginctl lock-session to lock your screen.
# exec swayidle -w timeout 300 'swaylock -C$HOME/.config/swaylock/config' timeout 420 'systemctl suspend' resume 'swaymsg "output * dpms on"' before-sleep 'swaylock'
# exec swayidle lock 'swaymsg "output * dpms on"&& swaylock' unlock 'kill -s 1 $(pgrep swaylock)'

########################################################################################
# Applications and Bindings ############################################################
########################################################################################
set $menu rofi -modi drun -show drun -show-icons

#
set $exec_or_move /home/tcrha/.config/sway/scripts/exec_or_move.py
set $terminal wezterm
set $browser 'MOZ_ENABLE_WAYLAND=1 firefox'
set $filemanager thunar
set $email evolution
set $notes obsidian
set $teams teams-for-linux

### Key bindings
#
# Basics:
bindsym $mod+Return exec $exec_or_move $terminal
bindsym $mod+b exec $exec_or_move $browser
bindsym $mod+f exec $exec_or_move $filemanager
bindsym $mod+e exec $exec_or_move $email
bindsym $mod+n exec $exec_or_move $notes
bindsym $mod+m exec $exec_or_move $teams

bindsym $mod+Shift+Return exec $terminal
bindsym $mod+Shift+b exec $browser
bindsym $mod+Shift+f exec $filemanager
bindsym $mod+Shift+e exec $email
bindsym $mod+Shift+n exec $notes
bindsym $mod+Shift+m exec $teams

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+Space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Moving around:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+y exec "/home/tcrha/.config/sway/scripts/hide-waybar.sh"

# Workspaces:

bindsym --no-repeat $mod+1 workspace number 1; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+2 workspace number 2; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+3 workspace number 3; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+4 workspace number 4; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+5 workspace number 5; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+6 workspace number 6; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+7 workspace number 7; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+8 workspace number 8; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+9 workspace number 9; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+0 workspace number 10; exec "echo 1 > /tmp/sovpipe"

bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"

# Move focused container to workspace
bindsym $mod+Ctrl+Shift+1 move container to workspace number 1, workspace number 1
bindsym $mod+Ctrl+Shift+2 move container to workspace number 2, workspace number 2
bindsym $mod+Ctrl+Shift+3 move container to workspace number 3, workspace number 3
bindsym $mod+Ctrl+Shift+4 move container to workspace number 4, workspace number 4
bindsym $mod+Ctrl+Shift+5 move container to workspace number 5, workspace number 5
bindsym $mod+Ctrl+Shift+6 move container to workspace number 6, workspace number 6
bindsym $mod+Ctrl+Shift+7 move container to workspace number 7, workspace number 7
bindsym $mod+Ctrl+Shift+8 move container to workspace number 8, workspace number 8
bindsym $mod+Ctrl+Shift+9 move container to workspace number 9, workspace number 9
bindsym $mod+Ctrl+Shift+0 move container to workspace number 10, workspace number 10

bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+h or $mod+v, for horizontal and vertical splits
# respectively.

bindsym $mod+Shift+escape exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# A special mode for passing any keybindings to the focused application
mode "passthrough" {
    bindsym $mod+p mode default
}
bindsym $mod+p mode "passthrough"
# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+d layout default
bindsym $mod+v layout splitv
bindsym $mod+h layout splith

# Make the current focus fullscree
bindsym Ctrl+Shift+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+u focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
# bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym Left resize shrink width 10px
    bindsym Shift+Left resize shrink width 50px
    bindsym $mod+Shift+Left move left 50px
    bindsym $mod+Left move left 10px

    bindsym Down resize grow height 10px
    bindsym Shift+Down resize grow height 50px
    bindsym $mod+Shift+Down move down 50px
    bindsym $mod+Down move down 10px

    bindsym Up resize shrink height 10px
    bindsym Shift+Up resize shrink height 50px
    bindsym $mod+Shift+Up move up 50px
    bindsym $mod+Up move up 10px

    bindsym Right resize grow width 10px
    bindsym Shift+Right resize grow width 50px
    bindsym $mod+Shift+Right move right 50px
    bindsym $mod+Right move right 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Media keys
set $WOBSOCK /tmp/wob.sock
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && (wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q MUTED && echo 0 > $WOBSOCK) || wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

### print screen function
bindsym $mod+Shift+s exec grimshot --notify copy area
bindsym $mod+Ctrl+Shift+s exec grimshot --notify save area
bindsym $mod+Ctrl+s exec grim -g "$(slurp)" - | swappy -f -

bindsym $mod+Shift+v exec wf-recorder -g "$(slurp)" -f ~/Videos/screencast-$(date +"%Y-%m-%d--%H-%M-%S.mp4")
bindsym $mod+Ctrl+Shift+v exec killall -s SIGINT wf-recorder

bindsym $mod+Ctrl+Space exec playerctl play-pause

#########################################################################################
#GUAKE MODE##############################################################################
#########################################################################################
### screen, and sends it to the scratchpad. Then a keybinding is set to show the scratchpad.
set $ddterm-id dropdown-terminal
set $ddterm WEZTERM_GUAKE=on $terminal start --class $ddterm-id
set $ddterm-resize resize set 100ppt 60ppt, move position 0 0

# resize/move new dropdown terminal windows
for_window [app_id="$ddterm-id"] {
  floating enable
  $ddterm-resize
  move to scratchpad
  scratchpad show
}

# show existing or start new dropdown terminal
bindsym Ctrl+Grave exec swaymsg '[app_id="$ddterm-id"] scratchpad show' \
  || $ddterm && swaymsg '[app_id="$ddterm-id"] $ddterm-resize'

#########################################################################################
# Application settings ##################################################################
#########################################################################################
# focus, floating, & sticky
for_window [title="(?:Open|Save) (?:File|Folder|As)"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [app_id="org.gnome.Calculator"] floating enable
popup_during_fullscreen smart
for_window [app_id="lxqt-policykit-agent"] {
    floating enable
    move position center
}

# Display PulseAudio volume control application (both GTK and Qt varieties)
# as a floating window.

for_window [app_id="pavucontrol"] {
    floating enable
    move position center
}

for_window [app_id="pavucontrol-qt"] {
    floating enable
    move position center
}

# apply mark for Xwayland and wayland native browser windows
for_window [class="Chromium-browser"] mark Browser
for_window [class="Brave-browser"] mark Browser
for_window [class="firefox"]  mark Browser
for_window [app_id="Chromium-browser"] mark Browser
for_window [app_id="brave-browser"] mark Browser
for_window [app_id="firefox"] mark Browser

# inhibit scrensaver for fullscreen browser windows
for_window [con_mark="Browser"] {
    inhibit_idle fullscreen
}

# firefox wayland screensharing indicator
for_window [app_id="firefox" title="Firefox — Sharing Indicator"] {
    floating enable
}

# qalculate-gtk
for_window [app_id="qalculate-gtk"] floating enable, border normal, move position cursor

#########################################################################################
# Autostart #############################################################################
#########################################################################################
include $(hostname).sway
include "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf"
# Applies all generated settings from SwaySettings
include ~/.config/sway/.generated_settings/*.conf
